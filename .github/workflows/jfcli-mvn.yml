# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: JF-CLI with Maven

on:
# TURN-OFF on every push 
  push:
    branches: [ main ]
#   pull_request:
#     branches: [ main ]
# issue_comment triggers this action on each comment on issues and pull requests
  issue_comment:
    types: [created]
  pull_request_target:
    types: [opened, synchronize]
permissions:
  actions: read # for detecting the Github Actions environment.
  id-token: write # for creating OIDC tokens for signing.
  packages: write # for uploading attestations.
  contents: read
  security-events: write # Required for uploading code scanning.
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        java: [ '17' ]
    env:
          MVN_REPO: 'krishnam-virtual'
          # JFROG_NAME: ${{ secrets.JF_NAME }}
          JF_NAME: ${{ vars.JF_NAME }}
          JF_HOST: ${{ vars.JF_NAME }}.jfrog.io
          JF_RT_URL: https://${{ vars.JF_NAME }}.jfrog.io
          RBv2_SIGNING_KEY: ${{ vars.RBV2_SIGNING_KEY }}
          JF_GIT_TOKEN: ${{ vars.GITHUB_TOKEN }}
          JF_ACCESS_TOKEN: ${{ vars.RBV2_SIGNING_KEY }}
          #JF_OIDC_PROVIDER_NAME: ${{ vars.JF_OIDC_PROVIDER_NAME }}
          PACKAGE_CATEGORY: 'WebApp'
          JOB_SUMMARY: false
    steps:
      # Use the specific setup-cli branch. Ref https://github.com/marketplace/actions/setup-jfrog-cli
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        id: setup-cli
        env:
          JF_URL: ${{env.JF_RT_URL}}
        with:
          oidc-provider-name: ${{ vars.JF_OIDC_PROVIDER_NAME }}
          disable-job-summary: ${{env.JOB_SUMMARY}}
      - run: |
          # JFrog CLI version
          jf --version
          # Ping the server
          jf rt ping
